{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DataFactoryKaits"
		},
		"LinckedServices_ADLS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LinckedServices_ADLS'"
		},
		"LinckedServices_SQLDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LinckedServices_SQLDB'"
		},
		"LinkedServices_ABSS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LinkedServices_ABSS'"
		},
		"LinckedServices_ADLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://kaitsblobstorage.dfs.core.windows.net/"
		},
		"TrigerEventFile_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/c3e3ad79-823c-43e1-b981-9fd1412b9b88/resourceGroups/GroupKaitsConsulting/providers/Microsoft.Storage/storageAccounts/kaitsblobstorage"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DFlowSelectDimcustomer",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dFlowinCustomerData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"inCustomerData": {},
									"InDimGeography": {},
									"sinkCustomerDataExcel": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dFlowinCustomerData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataSetPreData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinckedServices_SQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinckedServices_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/inCustomerData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinkedServices_ABSS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "CustomerData.csv",
						"container": "kaitsfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerAlternateKey",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "CountryRegionCode",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "MiddleName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "BirthDate",
						"type": "String"
					},
					{
						"name": "MaritalStatus",
						"type": "String"
					},
					{
						"name": "Suffix",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "EmailAddress",
						"type": "String"
					},
					{
						"name": "YearlyIncome",
						"type": "String"
					},
					{
						"name": "TotalChildren",
						"type": "String"
					},
					{
						"name": "NumberChildrenAtHome",
						"type": "String"
					},
					{
						"name": "EnglishEducation",
						"type": "String"
					},
					{
						"name": "SpanishEducation",
						"type": "String"
					},
					{
						"name": "FrenchEducation",
						"type": "String"
					},
					{
						"name": "EnglishOccupation",
						"type": "String"
					},
					{
						"name": "SpanishOccupation",
						"type": "String"
					},
					{
						"name": "FrenchOccupation",
						"type": "String"
					},
					{
						"name": "HouseOwnerFlag",
						"type": "String"
					},
					{
						"name": "NumberCarsOwned",
						"type": "String"
					},
					{
						"name": "AddressLine1",
						"type": "String"
					},
					{
						"name": "AddressLine2",
						"type": "String"
					},
					{
						"name": "Phone",
						"type": "String"
					},
					{
						"name": "DateFirstPurchase",
						"type": "String"
					},
					{
						"name": "CommuteDistance",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinkedServices_ABSS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outDimCustomer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinckedServices_SQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "GeographyKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "BirthDate",
						"type": "date"
					},
					{
						"name": "MaritalStatus",
						"type": "nchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "Gender",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "YearlyIncome",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalChildren",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "NumberChildrenAtHome",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "EnglishEducation",
						"type": "nvarchar"
					},
					{
						"name": "SpanishEducation",
						"type": "nvarchar"
					},
					{
						"name": "FrenchEducation",
						"type": "nvarchar"
					},
					{
						"name": "EnglishOccupation",
						"type": "nvarchar"
					},
					{
						"name": "SpanishOccupation",
						"type": "nvarchar"
					},
					{
						"name": "FrenchOccupation",
						"type": "nvarchar"
					},
					{
						"name": "HouseOwnerFlag",
						"type": "nchar"
					},
					{
						"name": "NumberCarsOwned",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "AddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "DateFirstPurchase",
						"type": "date"
					},
					{
						"name": "CommuteDistance",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimCustomer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinckedServices_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outDimGeography')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LinckedServices_SQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GeographyKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "StateProvinceCode",
						"type": "nvarchar"
					},
					{
						"name": "StateProvinceName",
						"type": "nvarchar"
					},
					{
						"name": "CountryRegionCode",
						"type": "nvarchar"
					},
					{
						"name": "EnglishCountryRegionName",
						"type": "nvarchar"
					},
					{
						"name": "SpanishCountryRegionName",
						"type": "nvarchar"
					},
					{
						"name": "FrenchCountryRegionName",
						"type": "nvarchar"
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "SalesTerritoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IpAddressLocator",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimGeography"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LinckedServices_SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinckedServices_ADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LinckedServices_ADLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LinckedServices_ADLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinckedServices_SQLDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LinckedServices_SQLDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedServices_ABSS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LinkedServices_ABSS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TrigerEventFile')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/kaitsfiles/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('TrigerEventFile_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PQConsultaToDimCustomer')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "inCustomerData",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> inCustomerData",
							"dataset": {
								"referenceName": "inCustomerData",
								"type": "DatasetReference"
							}
						},
						{
							"name": "outDimGeography",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> outDimGeography",
							"dataset": {
								"referenceName": "outDimGeography",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared inCustomerData = let AdfDoc = AzureStorage.BlobContents(\"https://kaitsblobstorage.blob.core.windows.net/kaitsfiles/CustomerData.csv\"),Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]), PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true]) in  PromotedHeaders;\r\nshared outDimGeography = let AdfDoc = Sql.Database(\"serverkaits01.database.windows.net\", \"Kaits\", [CreateNavigationProperties = false]), InputTable = AdfDoc{[Schema=\"dbo\",Item=\"DimGeography\"]}[Data] in InputTable;\r\nshared UserQuery = let Source = #\"inCustomerData\" in Source;\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/inCustomerData')]",
				"[concat(variables('factoryId'), '/datasets/outDimGeography')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dFlowinCustomerData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "inCustomerData",
								"type": "DatasetReference"
							},
							"name": "inCustomerData"
						},
						{
							"dataset": {
								"referenceName": "outDimGeography",
								"type": "DatasetReference"
							},
							"name": "InDimGeography"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "LinckedServices_SQLDB",
								"type": "LinkedServiceReference"
							},
							"name": "sinkCustomerDataExcel"
						}
					],
					"transformations": [
						{
							"name": "MergeCustonDataDimGeography"
						},
						{
							"name": "SelectImputDimCustomer"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CustomerAlternateKey as string,",
						"          City as string,",
						"          CountryRegionCode as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          BirthDate as date,",
						"          MaritalStatus as string,",
						"          Suffix as string,",
						"          Gender as string,",
						"          EmailAddress as string,",
						"          YearlyIncome as string,",
						"          TotalChildren as string,",
						"          NumberChildrenAtHome as string,",
						"          EnglishEducation as string,",
						"          SpanishEducation as string,",
						"          FrenchEducation as string,",
						"          EnglishOccupation as string,",
						"          SpanishOccupation as string,",
						"          FrenchOccupation as string,",
						"          HouseOwnerFlag as string,",
						"          NumberCarsOwned as string,",
						"          AddressLine1 as string,",
						"          AddressLine2 as string,",
						"          Phone as string,",
						"          DateFirstPurchase as date,",
						"          CommuteDistance as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> inCustomerData",
						"source(output(",
						"          GeographyKey as integer,",
						"          City as string,",
						"          StateProvinceCode as string,",
						"          StateProvinceName as string,",
						"          CountryRegionCode as string,",
						"          EnglishCountryRegionName as string,",
						"          SpanishCountryRegionName as string,",
						"          FrenchCountryRegionName as string,",
						"          PostalCode as string,",
						"          SalesTerritoryKey as integer,",
						"          IpAddressLocator as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> InDimGeography",
						"inCustomerData, InDimGeography join(inCustomerData@City == InDimGeography@City",
						"     && inCustomerData@CountryRegionCode == InDimGeography@CountryRegionCode,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> MergeCustonDataDimGeography",
						"MergeCustonDataDimGeography select(mapColumn(",
						"          GeographyKey,",
						"          CustomerAlternateKey,",
						"          FirstName,",
						"          MiddleName,",
						"          LastName,",
						"          BirthDate,",
						"          MaritalStatus,",
						"          Suffix,",
						"          Gender,",
						"          EmailAddress,",
						"          YearlyIncome,",
						"          TotalChildren,",
						"          NumberChildrenAtHome,",
						"          EnglishEducation,",
						"          SpanishEducation,",
						"          FrenchEducation,",
						"          EnglishOccupation,",
						"          SpanishOccupation,",
						"          FrenchOccupation,",
						"          HouseOwnerFlag,",
						"          NumberCarsOwned,",
						"          AddressLine1,",
						"          AddressLine2,",
						"          Phone,",
						"          DateFirstPurchase,",
						"          CommuteDistance",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectImputDimCustomer",
						"SelectImputDimCustomer sink(allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: 'CustomerDataExcel',",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     recreate: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          GeographyKey,",
						"          CustomerAlternateKey,",
						"          FirstName,",
						"          MiddleName,",
						"          LastName,",
						"          BirthDate,",
						"          MaritalStatus,",
						"          Suffix,",
						"          Gender,",
						"          EmailAddress,",
						"          YearlyIncome,",
						"          TotalChildren,",
						"          NumberChildrenAtHome,",
						"          EnglishEducation,",
						"          SpanishEducation,",
						"          FrenchEducation,",
						"          EnglishOccupation,",
						"          SpanishOccupation,",
						"          FrenchOccupation,",
						"          HouseOwnerFlag,",
						"          NumberCarsOwned,",
						"          AddressLine1,",
						"          AddressLine2,",
						"          Phone,",
						"          DateFirstPurchase,",
						"          CommuteDistance",
						"     )) ~> sinkCustomerDataExcel"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/inCustomerData')]",
				"[concat(variables('factoryId'), '/datasets/outDimGeography')]",
				"[concat(variables('factoryId'), '/linkedServices/LinckedServices_SQLDB')]"
			]
		}
	]
}